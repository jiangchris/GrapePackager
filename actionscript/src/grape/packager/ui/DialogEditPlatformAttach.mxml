<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:ui="grape.packager.ui.*"
		 width="550" height="300">
	
	<fx:Script>
		<![CDATA[
        import flash.filesystem.File;

        import mx.collections.ArrayCollection;
            import mx.managers.PopUpManager;
			
			[Bindable]
			protected var mListDataSource:ArrayCollection = new ArrayCollection();
			protected var mCloseHandler:Function = null;
            protected var mFile:File = null;
            protected var mTypeFilters:Array = null;
            [Bindable]
            protected var mAddDirBtnEnabled:Boolean = true;
            [Bindable]
            protected var mAddFileBtnEnabled:Boolean = true;

			public function show(title:String,attach:String,closeHandler:Function,typeFilters:Array = null,selectDirEnabled:Boolean = true,selectFileEnabled:Boolean = true):void{
				this.title = title;
				this.mCloseHandler = closeHandler;
                this.mAddDirBtnEnabled = selectDirEnabled;
                this.mAddFileBtnEnabled = selectFileEnabled;
                this.mTypeFilters = typeFilters;
				var attachPaths:Array = attach.split(";");
				for (var i:int = 0; i < attachPaths.length; i++) 
				{
					try{
                        mListDataSource.addItem(new File(attachPaths[i]));
					}catch(e:Error){

					}
				}
				
				PopUpManager.addPopUp(this,GrapePackager.packagerTool,true);
				PopUpManager.centerPopUp(this);
			}

            protected function get fileBrowser():File{
                if(!mFile){
                    mFile = new File();
                    mFile.addEventListener(Event.SELECT,fileSelectHandler);
                    mFile.addEventListener(FileListEvent.SELECT_MULTIPLE,multiFileSelectHandler);
                }
                return mFile;
            }

            protected function fileSelectHandler(event:Event):void{
                if(!check(mFile)){
                    mListDataSource.addItem(new File(fileBrowser.nativePath));
                }
            }

            protected function multiFileSelectHandler(event:FileListEvent):void{
                for(var i:int = 0;i < event.files.length;i++){
                    if(!check(event.files[i])){
                        mListDataSource.addItem(new File(event.files[i].nativePath));
                    }
                }
            }

            protected function check(file:File):Boolean{
                var b:Boolean = false;
                var i:int = mListDataSource.length;
                while(i > 0){
                    if(mListDataSource[i - 1].nativePath == file.nativePath){
                        b = true;
                        break;
                    }
                    i--;
                }
                return b;
            }

			protected function btnAddFile_clickHandler(event:MouseEvent):void{
                fileBrowser.browseForOpenMultiple("选择文件",this.mTypeFilters);
			}
			
			protected function btnAddDir_clickHandler(event:MouseEvent):void{
                fileBrowser.browseForDirectory("选择一个文件夹");
			}
			
			protected function btnDelSelectedItem_clickHandler(event:MouseEvent):void{
                if(mListFiles.selectedIndex > -1){
                    mListDataSource.removeItemAt(mListFiles.selectedIndex);
                }
			}
			
			protected function btnOk_clickHandler(event:MouseEvent):void{
				PopUpManager.removePopUp(this);
                if(this.mCloseHandler != null){
                    var paths:Array = [];
                    for(var i:int = 0;i < mListDataSource.length;i++){
                        paths.push(mListDataSource[i].nativePath.replace(/\\/g,"/"));
                    }
                    this.mCloseHandler(paths.join(";"));
                }
			}
			
			protected function btnCancel_clickHandler(event:MouseEvent):void{
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</fx:Script>

    <s:layout>
        <s:VerticalLayout gap="10" verticalAlign="middle"/>
    </s:layout>

	<s:HGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingTop="5">
		<s:List dataProvider="{mListDataSource}" labelField="nativePath" id="mListFiles" width="100%" height="100%"/>
		<s:VGroup height="100%">
			<s:Button label="添加文件" id="btnAddFile" click="btnAddFile_clickHandler(event)" enabled="{this.mAddFileBtnEnabled}"/>
			<s:Button label="添加目录" id="btnAddDir" click="btnAddDir_clickHandler(event)" enabled="{this.mAddDirBtnEnabled}"/>
			<s:Button label="删除选中" id="btnDelSelecedItem" click="btnDelSelectedItem_clickHandler(event)"/>
		</s:VGroup>
	</s:HGroup>
	
	<s:HGroup width="100%" paddingBottom="10" horizontalAlign="center">
		<s:Button label="确定" id="btnOk" click="btnOk_clickHandler(event)"/>
		<s:Button label="取消" id="btnCancel" click="btnCancel_clickHandler(event)"/>
	</s:HGroup>
	
</s:Panel>
